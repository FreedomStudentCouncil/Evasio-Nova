create-next-appをしました。eslint,tailwindcss src/directory, approuter, turtopackなど、すべての選択肢はYesにし、今プロジェクトのルートに移りました。次は仕様書です。お願いします。

https://console.firebase.google.com/v1/r/project/evasio-nova/firestore/indexes?create_composite=ClBwcm9qZWN0cy9ldmFzaW8tbm92YS9kYXRhYmFzZXMvKGRlZmF1bHQpL2NvbGxlY3Rpb25Hcm91cHMvd2lraUFydGljbGVzL2luZGV4ZXMvXxABGgwKCGF1dGhvcklkEAEaCAoEZGF0ZRACGgwKCF9fbmFtZV9fEAI


 Evasio-Nova 仕様書

 1. プロジェクト概要
Evasio-Novaは、専門家が知識を投稿し、利用者がそれらの知識を活用できるプラットフォームです。直感的なUI、信頼性の高いコンテンツ、動的な選択肢提案を重視した設計を行います。
知恵袋やwikipediaのようなものの縮小版で、利用者が選択肢を進めて最適な解決策を探ることのできるモードがあることが一つの特徴です。

全体的にクールで美しく、モダンなデザインで。アニメーションも多用して。

 ルートページ
Evasio-Novaへようこそ。ここでは、「ネットやデバイス制限環境の中にある諸君に知恵を授けます。」
という文言や、Evasio-Novaについての説明。
「＜クイック診断＞(evado)」というボタンがあり、そこを押すと「利用者が選択肢を進めて最適な解決策を探ることのできるモード」が始まります。
人気記事一覧（wikiページの、「使えた！」と「いいね」の数に応じて上位5件を表示）

 /evadoページ
開くと、次が聞かれます。
一つの質問で一つの画面です。選択肢によって、次の画面での質問は変わります。

-何がしたいですか？（プロキシを探す,学校の制限を解除する,家の制限を解除する,その他）{
-プロキシを探すの場合{
-Youtubeを見るの場合
-制限ソフトは？(ISGC,InterSafe,拡張機能系,その他){
-ISGCの場合：no-cookie Youtubeの見方についてのwikiページへ誘導
-その他の場合：youtube proxysのwikiページへ誘導
}
-サイトを見る
-制限ソフトは？(ISGC,InterSafe,拡張機能系,その他){
-ISGC,InterSafeの場合：proxys for ISGCへ誘導
-その他の場合：proxysのwikiページへ誘導
}
}
-学校の制限を解除する　の場合{略}
以下略
といった形です。jsonでデータは保管し（これはfirebaseではなく、このサイトに最初から用意する）


 /wikiページ
データはfirestoreに保存。（課金額のため、コレクションを多用しすぎないように。できるだけドキュメントで済ますか、フィールドで済ませてほしい。）
記事の概要のみ保存するデータベース（検索用など）と、記事の内容を保存するサーバーの2つを使います。
firebaseのルールはread: true, write: authenticationで認可されたユーザーのみ。
記事はunique idで管理
マークダウンで書かれている。

 /login ページ
サインアップまたはサインイン。firebase authenticationで。

 /edit-wikiページ
基本的に編集できるのは自分の記事だけ。
この辺りはまた後で機能追加する。
マークダウンで記述。

---

 フロントエンド
- 使用技術: Next.js（TypeScript）,MPA(マルチページ)
- デザインフレームワーク: Tailwind CSSとMaterial-UI
- ユーザーフレンドリーなUI/UX
 バックエンド
- 形式: 静的サイト
- ホスティング: Vercel, Netlify, またはRender
---
 3. データベース
- Firebase Firestore
  - 専門家用: Googleログインによる認証
  - 一般利用者: ログイン不要
- Imgur API
  - wiki投稿時の画像保存に利用

 ワークフロー
1. ツリーデータ構造
   - Firestoreでノードとして各選択肢を保存
   - GraphQLスキーマの導入検討
2. アルゴリズム
   - ユーザー選択履歴を分析して最適な解決策を提案
3. タグ/カテゴリ機能
   - 投稿にタグを付与し、フィルタリングを容易に
